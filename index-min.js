!function(){var e={apiKey:keys.apiKey,authDomain:keys.authDomain,projectId:keys.projectId,storageBucket:keys.storageBucket,messagingSenderId:keys.messagingSenderId,databaseURL:keys.databaseURL,appId:keys.appId,measurementId:keys.measurementId};firebase.initializeApp(e)}(),document.querySelector("#rules-of-game").onclick=(()=>{document.querySelector("#inst-box").removeAttribute("hidden")}),document.querySelector("#how-to-play").onclick=(()=>{document.querySelector("#inst-box-htp").removeAttribute("hidden")}),document.querySelector(".cross").onclick=(()=>{document.querySelector("#inst-box").setAttribute("hidden",!0),document.querySelector("#inst-box-htp").setAttribute("hidden",!0)}),document.querySelector(".cross").onclick=(()=>{document.querySelector("#inst-box").setAttribute("hidden",!0)}),document.querySelector("#inst-box-htp .cross").onclick=(()=>{document.querySelector("#inst-box-htp").setAttribute("hidden",!0)});let players=[],turn=0,gameOver=!1,dimensionRow=parseInt(document.getElementById("dimensionsRow").value),dimensionCol=parseInt(document.getElementById("dimensionsCol").value),length=parseInt(document.getElementById("length").value),board=new Array(dimensionRow).fill("").map(()=>new Array(dimensionCol).fill("")),username=document.getElementById("user-name").value;const changeDimensionRow=e=>{dimensionRow=parseInt(e.target.value),board=new Array(dimensionRow).fill("").map(()=>new Array(dimensionCol).fill("")),console.log(board)},changeDimensionCol=e=>{dimensionCol=parseInt(e.target.value),board=new Array(dimensionRow).fill("").map(()=>new Array(dimensionCol).fill("")),console.log(board)},changeLength=e=>{if(length=parseInt(e.target.value),console.log("length",length),length>dimensionCol||length>dimensionRow)return alert("length should be less than row and column"),void(length=parseInt(3))};document.getElementById("dimensionsRow").addEventListener("change",changeDimensionRow),document.getElementById("length").addEventListener("change",changeLength),document.getElementById("dimensionsCol").addEventListener("change",changeDimensionCol);const createGame=async()=>{let e=document.getElementById("user-name").value;if(isEmpty(e))return void alert("Player name is required");document.querySelector(".menu").setAttribute("hidden",!0);const t=(new Date).getTime()%1e6;let n={player1:e,row:dimensionRow,col:dimensionCol,length:length,ready1:!0,ready2:!1,turn:e,win:null,board:new Array(Number(dimensionRow)).fill("").map(()=>new Array(Number(dimensionCol)).fill(""))};try{await firebase.database().ref(`rooms/${t}`).set(n)}catch{return void alert("something went wrong. try again")}console.log(t),document.querySelector("#room-id-box").removeAttribute("hidden"),document.querySelector("#room-id-text").textContent=`Room ID : ${t}`,copyToClipboard(t);var o=firebase.database().ref(`rooms/${t}/ready2`);o.on("value",e=>{const r=e.val();console.log("value changed",r),r&&(console.log("player 1 confirms player 2 is ready"),document.querySelector("#room-id-box").setAttribute("hidden",!0),document.querySelector("#rules-of-game").setAttribute("hidden",!0),document.querySelector("#how-to-play").setAttribute("hidden",!0),document.querySelector("#footer-box").setAttribute("hidden",!0),o.off(),startGame(n,t))})},copyToClipboard=e=>{const t=document.createElement("textarea");t.value=e,document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t)},joinGame=async()=>{let e,t=document.getElementById("user-name").value,n=document.getElementById("room-id").value;if(isEmpty(t))return void alert("Player name is required");if(isEmpty(n))return void alert("Enter Room ID");firebase.database().ref().child(`rooms/${n}`).get().then(async o=>{o.exists()?(e=o.val(),console.log(o.val()),t!==e.player1?(await firebase.database().ref(`rooms/${n}`).update({player2:t,ready2:!0}),console.log("player 2 is loaded"),document.querySelector(".menu").setAttribute("hidden",!0),document.querySelector("#rules-of-game").setAttribute("hidden",!0),document.querySelector("#how-to-play").setAttribute("hidden",!0),document.querySelector("#footer-box").setAttribute("hidden",!0),startGame(e,n)):alert("Your name is same as your oponent, Please change")):alert("Wrong Room ID")}).catch(e=>{console.error(e),alert("Something went wrong, try again")})},startGame=async(e,t)=>{let n=document.getElementById("user-name").value,o=document.getElementById("game-container");var r=firebase.database().ref(`rooms/${t}`);o.classList.remove("hide");let l=document.getElementById("game-container");document.getElementById("turn").innerHTML=e.turn+"'s turn",document.querySelector(".setting-show").removeAttribute("hidden"),document.getElementById("row-show").innerHTML=`Rows: ${e.row}`,document.getElementById("col-show").innerHTML=`Column: ${e.col}`,document.getElementById("length-show").innerHTML=`Length: ${e.length}`;let a=e.board;for(let o=0;o<e.row;o++){let r=document.createElement("div");r.className="row";for(let l=0;l<e.col;l++){let e=document.createElement("div");e.setAttribute("id",`cell${o}${l}`),e.addEventListener("click",e=>{firebase.database().ref().child(`rooms/${t}`).get().then(async e=>{if(e.exists()){let r=await e.val();console.log("turn",r.turn),console.log("username",n),r.turn===n&""===a[o][l]&&(a[o][l]="X",firebase.database().ref(`rooms/${t}`).update({board:a,turn:r.turn===r.player1?r.player2:r.player1}),calculateWin(r.row,r.col,r.length,a)&&firebase.database().ref(`rooms/${t}`).update({win:r.turn}))}}).catch(e=>{console.error(e),alert("Something went wrong, try again")})}),e.className="cell",r.appendChild(e)}l.appendChild(r)}r.on("value",async e=>{const n=e.val();if(console.log("value changed"),n){a=n.board;for(let e=0;e<n.row;e++)for(let t=0;t<n.col;t++)document.querySelector(`#cell${e}${t}`).innerHTML=n.board[e][t],document.getElementById("turn").innerHTML=n.turn+"'s turn";n.win&&(document.getElementById("turn").innerHTML=n.win+" Won",alert(`${n.win} Won`),r.off(),document.getElementById("play-again").removeAttribute("hidden"),document.getElementById("play-again").onclick=(async()=>{let e={player1:n.player1,row:n.row,col:n.col,length:n.length,ready1:!0,ready2:!0,win:null,board:new Array(Number(n.row)).fill("").map(()=>new Array(Number(n.col)).fill(""))};await firebase.database().ref(`rooms/${t}`).update(e),document.getElementById("play-again").setAttribute("hidden",!0);for(let e=0;e<n.row;e++)for(let t=0;t<n.col;t++)document.querySelector(`#cell${e}${t}`).remove();startGame(e,t)}))}})},calculateWin=(e,t,n,o)=>{let r=n;console.log(o);for(let n=0;n<e;n++)for(let e=0;e<t-r+1;e++){let t=0;if("X"===o[n][e]||"O"===o[n][e]){t++;for(let l=1;l<r&&o[n][e]===o[n][e+l];l++)if(++t===r)return!0}}for(let n=0;n<t;n++)for(let t=0;t<e-r+1;t++){let e=0;if("X"===o[t][n]||"O"===o[t][n]){e++;for(let l=1;l<r&&o[t][n]===o[t+l][n];l++)if(++e===r)return!0}}for(var l,a=e,i=t,d=Math.max(i,a),s=[],m=0;m<=2*(d-1);++m){l=[];for(var c=a-1;c>=0;--c){(y=m-(a-c))>=0&&y<i&&l.push(o[c][y])}l.length>0&&s.push(l)}console.log("a - array",s);for(let e=0;e<s.length;e++)for(let t=0;t<s[e].length;t++){let n=0;if("X"===s[e][t]||"O"===s[e][t]){n++;for(let o=1;o<r&&s[e][t]===s[e][t+o];o++)if(++n===r)return!0}}var u=[];for(m=0;m<=2*(d-1);++m){l=[];for(c=a-1;c>=0;--c){var y;(y=m-c)>=0&&y<i&&l.push(o[c][y])}l.length>0&&u.push(l)}for(let e=0;e<s.length;e++)for(let t=0;t<s[e].length;t++){let n=0;if("X"===u[e][t]||"O"===u[e][t]){n++;for(let o=1;o<r&&u[e][t]===u[e][t+o];o++)if(++n===r)return!0}}return!1},isEmpty=e=>!e||!e.trim();